/* Enclave.edl - Top EDL file. */

enclave {
    untrusted {
        void ocall_print_string([in, string] const char *str);
    };

    trusted {

        /* network.cpp */

        public void ecall_accept_request(
            [in, size=40] unsigned char *sender,
            [in, size=40] unsigned char *receiver,
            unsigned int amount,
            [user_check] unsigned int *payment_num);
        
        public void ecall_add_participant(
            unsigned int payment_num,
            [in, size=40] unsigned char *addr);

        public void ecall_update_sentagr_list(
            unsigned int payment_num,
            [in, size=40] unsigned char *addr);

        public void ecall_update_sentupt_list(
            unsigned int payment_num,
            [in, size=40] unsigned char *addr);

        public void ecall_check_unanimity(
            unsigned int payment_num,
            int which_list,
            [user_check] int *is_unanimous);

        public void ecall_update_payment_status_to_success(
            unsigned int payment_num);

        public void ecall_create_ag_req_msg(
            unsigned int payment_num,
            unsigned int payment_size,
            [user_check] unsigned int *channel_ids,
            [user_check] int *amount,
            [user_check] unsigned char *req_msg,
            [user_check] unsigned char *req_sig);

        public void ecall_create_ud_req_msg(
            unsigned int payment_num,
            unsigned int payment_size,
            [user_check] unsigned int *channel_ids,
            [user_check] int *amount,
            [user_check] unsigned char *req_msg,
            [user_check] unsigned char *req_sig);

        public void ecall_create_confirm_msg(
            unsigned int payment_num,
            [user_check] unsigned char *confirm_msg,
            [user_check] unsigned char *confirm_sig);

        public void ecall_verify_ag_res_msg(
            [user_check] unsigned char *pubaddr,
            [user_check] unsigned char *res_msg,
            [user_check] unsigned char *res_sig,
            [user_check] unsigned int *is_verified);

        public void ecall_verify_ud_res_msg(
            [user_check] unsigned char *pubaddr,
            [user_check] unsigned char *res_msg,
            [user_check] unsigned char *res_sig,
            [user_check] unsigned int *is_verified);

        /*
         *
         *
         * InstaPay 3.0
         */

	public void ecall_cross_accept_request(
            [user_check] unsigned char *chain1Sender,
            [user_check] unsigned char *chain1MiddleMan,
            [user_check] unsigned char *chain1Receiver,
            unsigned int chain1Amount,

            [user_check] unsigned char *chain2Sender,
            [user_check] unsigned char *chain2MiddleMan,
            [user_check] unsigned char *chain2Receiver,
            unsigned int chain2Amount,

            unsigned int numOfParticipants,
            [user_check] unsigned int *payment_num);

        public void ecall_cross_add_participant(
            unsigned int payment_num, 
            [in, size=40] unsigned char *addr);

        public void ecall_cross_update_preparedServer_list(
            unsigned int payment_num, 
            [in, size=40] unsigned char *addr);

        public void ecall_cross_update_committedServer_list(
            unsigned int payment_num, 
            [in, size=40] unsigned char *addr);

        public void ecall_cross_check_prepared_unanimity(
            unsigned int payment_num, 
            int which_list,
            [user_check] unsigned int *unanimous);

        public void ecall_cross_check_committed_unanimity(
            unsigned int payment_num, 
            int which_list,
            [user_check] unsigned int *unanimous);

	public void ecall_cross_create_all_prepare_req_msg(
            unsigned int payment_num, 
            [user_check] unsigned char *sender, 
            [user_check] unsigned char *middleMan, 
            [user_check] unsigned char *receiver, 
            unsigned int sender_payment_size, 
            [user_check] unsigned int *sender_channel_ids, 
            unsigned int middleMan_payment_size, 
            [user_check] unsigned int *middleMan_channel_ids, 
            unsigned int receiver_payment_size, 
            [user_check] unsigned int *receiver_channel_ids, 
            [user_check] int *sender_amount,  
            [user_check] int *middleMan_amount, 
            [user_check] int *receiver_amount,
            [user_check] unsigned char *req_msg, 
            [user_check] unsigned char *req_sig,
	    [user_check] unsigned int *result);

	public void ecall_cross_create_all_commit_req_msg(
            unsigned int payment_num, 
            [user_check] unsigned char *sender, 
            [user_check] unsigned char *middleMan, 
            [user_check] unsigned char *receiver, 
            unsigned int sender_payment_size, 
            [user_check] unsigned int *sender_channel_ids, 
            unsigned int middleMan_payment_size, 
            [user_check] unsigned int *middleMan_channel_ids, 
            unsigned int receiver_payment_size, 
            [user_check] unsigned int *receiver_channel_ids, 
            [user_check] int *sender_amount,  
            [user_check] int *middleMan_amount, 
            [user_check] int *receiver_amount,
            [user_check] unsigned char *req_msg, 
            [user_check] unsigned char *req_sig,
	    [user_check] unsigned int *result);

	public void ecall_cross_verify_all_prepared_res_msg(
	    [user_check] unsigned char *res_msg, 
            [user_check] unsigned char *res_sig, 
	    [user_check] unsigned char *address,
            [user_check] unsigned int *is_verified);

	public void ecall_cross_verify_all_committed_res_msg(
	    [user_check] unsigned char *res_msg, 
            [user_check] unsigned char *res_sig,
	    [user_check] unsigned char *address, 
            [user_check] unsigned int *is_verified);

	public void ecall_cross_create_all_confirm_req_msg(
            unsigned int payment_num, 
            [user_check] unsigned char *sender, 
            [user_check] unsigned char *middleMan, 
            [user_check] unsigned char *receiver, 
            unsigned int sender_payment_size, 
            [user_check] unsigned int *sender_channel_ids, 
            unsigned int middleMan_payment_size, 
            [user_check] unsigned int *middleMan_channel_ids, 
            unsigned int receiver_payment_size, 
            [user_check] unsigned int *receiver_channel_ids, 
            [user_check] int *sender_amount,  
            [user_check] int *middleMan_amount, 
            [user_check] int *receiver_amount,
            [user_check] unsigned char *req_msg, 
            [user_check] unsigned char *req_sig,
	    [user_check] unsigned int *result);

        public void ecall_cross_create_all_refund_req_msg(
            unsigned int payment_num, 
            [user_check] unsigned char *refund_msg, 
            [user_check] unsigned char *refund_sig);

	public void ecall_initSecp256k1CTX();

    };
};
