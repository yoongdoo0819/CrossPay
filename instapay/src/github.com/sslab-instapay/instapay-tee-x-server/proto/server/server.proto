syntax = "proto3";

service Server {
    rpc paymentRequest(paymentRequestMessage) returns (Result) {}
    rpc communicationInfoRequest(address) returns (CommunicationInfo) {}
    
    rpc crossPaymentPrepareRequest(crossPaymentPrepareReqMessage) returns (Result) {}
    rpc crossPaymentCommitRequest(crossPaymentCommitReqMessage) returns (Result) {}
    rpc crossPaymentConfirmRequest(crossPaymentConfirmReqMessage) returns (Result) {}

}

message paymentRequestMessage {
    string from = 1;
    string to = 2;
    int64 amount = 3;
}

message address {
    string addr = 1;
}

message Result {
    bool result = 1;
}

message CommunicationInfo {
    string IPAddress = 1;
    int64 port = 2;
}

message crossPaymentPrepareReqMessage {
    int64 pn = 1;
    string from = 2;
    string to = 3;
    int64 amount = 4;
    bytes originalMessage = 5;
    bytes signature = 6;
}

message crossPaymentCommitReqMessage {
    int64 pn = 1;
    string from = 2;
    string to = 3;
    int64 amount = 4;
    bytes originalMessage = 5;
    bytes signature = 6;
}

message crossPaymentConfirmReqMessage {
    int64 pn = 1;
    string from = 2;
    string to = 3;
    int64 amount = 4;
    bytes originalMessage = 5;
    bytes signature = 6;
}


