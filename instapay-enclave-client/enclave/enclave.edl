/* Enclave.edl - Top EDL file. */

enclave {
    untrusted {

        /* store */

        void ocall_print_string([in, string] const char *str);

        void ocall_remove_key_file([user_check] char *keyfile);

        void ocall_store_sealed_seckey([user_check] char *keyfile, [in, size=592] unsigned char *sealed_seckey);

        void ocall_remove_channel_file([user_check] char *chfile);

        void ocall_store_sealed_channel_data([user_check] char *chfile, [in, size=628] unsigned char *sealed_seckey);

    };

    trusted {

        /* command */

        public void ecall_preset_account(
            [in, size=40] unsigned char *addr,
            [in, size=64] unsigned char *seckey);

        public void ecall_preset_payment(
            unsigned int pn,
            unsigned int channel_id,
            int amount);

        public void ecall_create_account(
            [user_check] unsigned char *generated_addr);

        public void ecall_create_channel(
            unsigned int nonce,
            [in, size=40] unsigned char *owner,
            [in, size=40] unsigned char *receiver,
            unsigned int deposit,
            [user_check] unsigned char *signed_tx,
            [user_check] unsigned int *signed_tx_len);

        public void ecall_onchain_payment(
            unsigned int nonce,
            [in, size=40] unsigned char *owner,
            [in, size=40] unsigned char *receiver,
            unsigned int amount,
            [user_check] unsigned char *signed_tx,
            [user_check] unsigned int *signed_tx_len);    

        public void ecall_pay(
            unsigned int channel_id,
            unsigned int amount,
            [user_check] int *is_success,
            [user_check] unsigned char *original_msg,
            [user_check] unsigned char *output);

        public void ecall_paid(
            [user_check] unsigned char *msg,
            [user_check] unsigned char *signature,
            [user_check] unsigned char *original_msg, 
            [user_check] unsigned char *output);

        public void ecall_pay_accepted(
            [user_check] unsigned char *msg,
            [user_check] unsigned char *signature);

        public void ecall_get_balance(
            unsigned int channel_id,
            [user_check] unsigned int *balance);

        public void ecall_get_channel_info(
            unsigned int channel_id,
            [user_check] unsigned char *channel_info);

        public void ecall_close_channel(
            unsigned int nonce,
            unsigned int channel_id,
            [user_check] unsigned char *signed_tx,
            [user_check] unsigned int *signed_tx_len);

        public void ecall_eject(
            unsigned int nonce,
            unsigned int pn,
            [user_check] unsigned char *signed_tx,
            [user_check] unsigned int *signed_tx_len);

        public void ecall_get_num_open_channels(
            [user_check] unsigned int *num_open_channels);

        public void ecall_get_open_channels(
            [user_check] unsigned char *open_channels);

        public void ecall_get_num_closed_channels(
            [user_check] unsigned int *num_closed_channels);

        public void ecall_get_closed_channels(
            [user_check] unsigned char *closed_channels);

        public void ecall_get_num_public_addrs(
            [user_check] unsigned int *num_public_addrs);

        public void ecall_get_public_addrs(
            [user_check] unsigned char *public_addrs);

        public void ecall_test_func(void);


        /* event */

        public void ecall_receive_create_channel(
            unsigned int channel_id,
            [in, size=40] unsigned char *owner,
            [in, size=40] unsigned char *receiver,
            unsigned int deposit);

        public void ecall_receive_close_channel(
            unsigned int channel_id,
            unsigned int owner_bal,
            unsigned int receiver_bal);


        /* network */

        public void ecall_go_pre_update(
            [user_check] unsigned char *msg,
            [user_check] unsigned char *signature,
            [user_check] unsigned char *original_msg, 
            [user_check] unsigned char *output);

        public void ecall_go_post_update(
            [user_check] unsigned char *msg,
            [user_check] unsigned char *signature,
            [user_check] unsigned char *original_msg, 
            [user_check] unsigned char *output);

        public void ecall_go_idle(
            [user_check] unsigned char *msg,
            [user_check] unsigned char *signature);

        public void ecall_register_comminfo(
            unsigned int channel_id,
            [user_check] unsigned char *ip,
            unsigned int ip_size,
            unsigned int port);


        /* store */

        public void ecall_store_account_data([user_check] char *keyfile);

        public void ecall_store_channel_data([user_check] char *chfile);


        /* load */

        public void ecall_load_account_data([in, size=592] unsigned char *sealed_seckey);

        public void ecall_load_channel_data([in, size=628] unsigned char *sealed_channel_data);

    };
};
